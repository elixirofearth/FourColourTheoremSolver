apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: fourcolour
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
        - name: fix-permissions
          image: busybox
          command: ["sh", "-c"]
          args:
            - |
              echo "Fixing Zookeeper directory permissions..."
              chown -R 1000:1000 /var/lib/zookeeper/data /var/lib/zookeeper/log
              chmod -R 755 /var/lib/zookeeper/data /var/lib/zookeeper/log
              echo "Zookeeper permissions fixed successfully"
          volumeMounts:
            - name: zookeeper-storage
              mountPath: /var/lib/zookeeper/data
            - name: zookeeper-logs
              mountPath: /var/lib/zookeeper/log
          securityContext:
            runAsUser: 0
      containers:
        - name: zookeeper
          image: confluentinc/cp-zookeeper:7.4.0
          ports:
            - containerPort: 2181
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
          volumeMounts:
            - name: zookeeper-storage
              mountPath: /var/lib/zookeeper/data
            - name: zookeeper-logs
              mountPath: /var/lib/zookeeper/log
      volumes:
        - name: zookeeper-storage
          persistentVolumeClaim:
            claimName: zookeeper-pvc
        - name: zookeeper-logs
          persistentVolumeClaim:
            claimName: zookeeper-logs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: fourcolour
spec:
  selector:
    app: zookeeper
  ports:
    - port: 2181
      targetPort: 2181
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: fourcolour
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      securityContext:
        fsGroup: 1001
      initContainers:
        - name: fix-permissions
          image: busybox
          command: ["sh", "-c"]
          args:
            - |
              echo "Fixing Kafka data directory permissions..."
              chown -R 1001:1001 /var/lib/kafka/data
              chmod -R 755 /var/lib/kafka/data
              echo "Permissions fixed successfully"
          volumeMounts:
            - name: kafka-storage
              mountPath: /var/lib/kafka/data
          securityContext:
            runAsUser: 0
        - name: wait-for-zookeeper
          image: busybox
          command: ["sh", "-c"]
          args:
            - |
              echo "Waiting for Zookeeper to be ready..."
              until nc -z zookeeper 2181; do
                echo "Zookeeper not ready, waiting..."
                sleep 2
              done
              echo "Zookeeper is ready!"
      containers:
        - name: kafka
          image: bitnami/kafka:3.5.1
          ports:
            - containerPort: 29092
          env:
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: KAFKA_CFG_LISTENERS
              value: "PLAINTEXT://:29092"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka:29092"
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
          volumeMounts:
            - name: kafka-storage
              mountPath: /var/lib/kafka/data
          livenessProbe:
            tcpSocket:
              port: 29092
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            tcpSocket:
              port: 29092
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: kafka-storage
          persistentVolumeClaim:
            claimName: kafka-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: fourcolour
spec:
  selector:
    app: kafka
  ports:
    - name: kafka
      port: 29092
      targetPort: 29092
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zookeeper-pvc
  namespace: fourcolour
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 40Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zookeeper-logs-pvc
  namespace: fourcolour
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 40Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-pvc
  namespace: fourcolour
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 40Gi

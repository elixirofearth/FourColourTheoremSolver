---
# HTTPS-enabled Ingress with automatic SSL certificates
# Instructions:
# 1. Replace 'YOUR_DOMAIN_HERE' with your actual domain (e.g., fourcolour.example.com)
# 2. Replace 'your-email@example.com' in cert-manager.yaml with your email
# 3. Apply cert-manager first: kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.3/cert-manager.yaml
# 4. Apply cert-manager.yaml: kubectl apply -f cert-manager.yaml
# 5. Apply this file: kubectl apply -f ingress-https.yaml

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fourcolour-ingress-https
  namespace: fourcolour
  annotations:
    # Enable SSL redirect
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # Force HTTPS
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # Enable CORS for frontend communication
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://four-colour-theorem-solver.vercel.app"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    # Increase proxy timeouts for long-running operations
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    # Increase body size for map uploads
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    # Automatic certificate generation
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - YOUR_DOMAIN_HERE # Replace with your domain (e.g., api.fourcolour.com)
      secretName: fourcolour-tls-secret
  rules:
    - host: YOUR_DOMAIN_HERE # Replace with your domain (e.g., api.fourcolour.com)
      http:
        paths:
          # Route all API traffic to the API Gateway
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: api-gateway-service
                port:
                  number: 8080
          # Route health checks to API Gateway
          - path: /actuator
            pathType: Prefix
            backend:
              service:
                name: api-gateway-service
                port:
                  number: 8080
          # Default route for API
          - path: /
            pathType: Prefix
            backend:
              service:
                name: api-gateway-service
                port:
                  number: 8080
